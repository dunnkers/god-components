@INPROCEEDINGS{Tika,  author={A. B. {Burgess} and C. A. {Mattmann}},  booktitle={Proceedings of the 2014 IEEE 15th International Conference on Information Reuse and Integration (IEEE IRI 2014)},   title={Automatically classifying and interpreting polar datasets with Apache Tika},   year={2014},  volume={},  number={},  pages={863-867},  doi={10.1109/IRI.2014.7051982}}

@book{tika_in_action, publisher={Manning}, title={Tika in Action}, year={2011}, author={Chris Mattmann, Jukka Zitting}, isbn={9781935182856}} 

@misc{apache_software_foundation_2020, url={https://tika.apache.org/}, journal={Apache Tika}, publisher={Apache}, author={Apache Software Foundation, ASF}, year={Retrieved 23rd of November 2020}, title={https://tika.apache.org/}} 

@inproceedings{smith2000software,
title={Software performance antipatterns},
author={Smith, Connie U and Williams, Lloyd G},
booktitle={Proceedings of the 2nd international workshop on Software and performance},
pages={127--136},
year={2000}
}

@article{riel1996object,
  title={Object-oriented design heuristics (Vol. 338)},
  author={Riel, Arthur J},
  journal={Reading: Addison-Wesley},
  year={1996}
}

@techreport{dresner1964maintenance,
  title={Maintenance, Maintainability, and System Requirements Engineering},
  author={Dresner, J and Borchers, KH},
  year={1964},
  institution={SAE Technical Paper}
}

@InProceedings{toward_a_catalogue_of_architetural_bad_smells,
author="Garcia, Joshua
and Popescu, Daniel
and Edwards, George
and Medvidovic, Nenad",
editor="Mirandola, Raffaela
and Gorton, Ian
and Hofmeister, Christine",
title="Toward a Catalogue of Architectural Bad Smells",
booktitle="Architectures for Adaptive Software Systems",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="146--162",
abstract="An architectural bad smell is a commonly (although not always intentionally) used set of architectural design decisions that negatively impacts system lifecycle properties, such as understandability, testability, extensibility, and reusability. In our previous short paper, we introduced the notion of architectural bad smells and outlined a few common smells. In this paper, we significantly expand upon that work. In particular, we describe in detail four representative architectural smells that emerged from reverse-engineering and re-engineering two large industrial systems and from our search through case studies in research literature. For each of the four architectural smells, we provide illustrative examples and demonstrate the smell's impact on system lifecycle properties. Our experiences indicate the need to identify and catalog architectural smells so that software architects can discover and eliminate them from system designs.",
isbn="978-3-642-02351-4"
}

@misc{chedgeystructure101,
  title={Structure101},
  author={Chedgey, C and Hickey, P and Oâ€™Reilly, P and McNamara, R}
}

@inproceedings{sharma2016designite,
  title={Designite: A software design quality assessment tool},
  author={Sharma, Tushar and Mishra, Pratibha and Tiwari, Rohit},
  booktitle={Proceedings of the 1st International Workshop on Bringing Architectural Design Thinking into Developers' Daily Activities},
  pages={1--4},
  year={2016}
}

@article{mckinney2011pandas,
  title={pandas: a foundational Python library for data analysis and statistics},
  author={McKinney, Wes and others},
  journal={Python for High Performance and Scientific Computing},
  volume={14},
  number={9},
  year={2011},
  publisher={Seattle}
}